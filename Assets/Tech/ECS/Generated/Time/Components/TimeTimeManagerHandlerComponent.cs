//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TimeContext {

    public TimeEntity timeManagerHandlerEntity { get { return GetGroup(TimeMatcher.TimeManagerHandler).GetSingleEntity(); } }
    public TimeManagerHandlerComponent timeManagerHandler { get { return timeManagerHandlerEntity.timeManagerHandler; } }
    public bool hasTimeManagerHandler { get { return timeManagerHandlerEntity != null; } }

    public TimeEntity SetTimeManagerHandler(TimeSystem.TimeManager newValue) {
        if (hasTimeManagerHandler) {
            throw new Entitas.EntitasException("Could not set TimeManagerHandler!\n" + this + " already has an entity with TimeManagerHandlerComponent!",
                "You should check if the context already has a timeManagerHandlerEntity before setting it or use context.ReplaceTimeManagerHandler().");
        }
        var entity = CreateEntity();
        entity.AddTimeManagerHandler(newValue);
        return entity;
    }

    public void ReplaceTimeManagerHandler(TimeSystem.TimeManager newValue) {
        var entity = timeManagerHandlerEntity;
        if (entity == null) {
            entity = SetTimeManagerHandler(newValue);
        } else {
            entity.ReplaceTimeManagerHandler(newValue);
        }
    }

    public void RemoveTimeManagerHandler() {
        timeManagerHandlerEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TimeEntity {

    public TimeManagerHandlerComponent timeManagerHandler { get { return (TimeManagerHandlerComponent)GetComponent(TimeComponentsLookup.TimeManagerHandler); } }
    public bool hasTimeManagerHandler { get { return HasComponent(TimeComponentsLookup.TimeManagerHandler); } }

    public void AddTimeManagerHandler(TimeSystem.TimeManager newValue) {
        var index = TimeComponentsLookup.TimeManagerHandler;
        var component = (TimeManagerHandlerComponent)CreateComponent(index, typeof(TimeManagerHandlerComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTimeManagerHandler(TimeSystem.TimeManager newValue) {
        var index = TimeComponentsLookup.TimeManagerHandler;
        var component = (TimeManagerHandlerComponent)CreateComponent(index, typeof(TimeManagerHandlerComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTimeManagerHandler() {
        RemoveComponent(TimeComponentsLookup.TimeManagerHandler);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class TimeMatcher {

    static Entitas.IMatcher<TimeEntity> _matcherTimeManagerHandler;

    public static Entitas.IMatcher<TimeEntity> TimeManagerHandler {
        get {
            if (_matcherTimeManagerHandler == null) {
                var matcher = (Entitas.Matcher<TimeEntity>)Entitas.Matcher<TimeEntity>.AllOf(TimeComponentsLookup.TimeManagerHandler);
                matcher.componentNames = TimeComponentsLookup.componentNames;
                _matcherTimeManagerHandler = matcher;
            }

            return _matcherTimeManagerHandler;
        }
    }
}
