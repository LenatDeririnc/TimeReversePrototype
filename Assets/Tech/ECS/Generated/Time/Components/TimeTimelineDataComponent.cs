//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TimeContext {

    public TimeEntity timelineDataEntity { get { return GetGroup(TimeMatcher.TimelineData).GetSingleEntity(); } }
    public TimelineDataComponent timelineData { get { return timelineDataEntity.timelineData; } }
    public bool hasTimelineData { get { return timelineDataEntity != null; } }

    public TimeEntity SetTimelineData(System.Collections.Generic.Stack<Common.TransformInfo> newValue) {
        if (hasTimelineData) {
            throw new Entitas.EntitasException("Could not set TimelineData!\n" + this + " already has an entity with TimelineDataComponent!",
                "You should check if the context already has a timelineDataEntity before setting it or use context.ReplaceTimelineData().");
        }
        var entity = CreateEntity();
        entity.AddTimelineData(newValue);
        return entity;
    }

    public void ReplaceTimelineData(System.Collections.Generic.Stack<Common.TransformInfo> newValue) {
        var entity = timelineDataEntity;
        if (entity == null) {
            entity = SetTimelineData(newValue);
        } else {
            entity.ReplaceTimelineData(newValue);
        }
    }

    public void RemoveTimelineData() {
        timelineDataEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TimeEntity {

    public TimelineDataComponent timelineData { get { return (TimelineDataComponent)GetComponent(TimeComponentsLookup.TimelineData); } }
    public bool hasTimelineData { get { return HasComponent(TimeComponentsLookup.TimelineData); } }

    public void AddTimelineData(System.Collections.Generic.Stack<Common.TransformInfo> newValue) {
        var index = TimeComponentsLookup.TimelineData;
        var component = (TimelineDataComponent)CreateComponent(index, typeof(TimelineDataComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTimelineData(System.Collections.Generic.Stack<Common.TransformInfo> newValue) {
        var index = TimeComponentsLookup.TimelineData;
        var component = (TimelineDataComponent)CreateComponent(index, typeof(TimelineDataComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTimelineData() {
        RemoveComponent(TimeComponentsLookup.TimelineData);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class TimeMatcher {

    static Entitas.IMatcher<TimeEntity> _matcherTimelineData;

    public static Entitas.IMatcher<TimeEntity> TimelineData {
        get {
            if (_matcherTimelineData == null) {
                var matcher = (Entitas.Matcher<TimeEntity>)Entitas.Matcher<TimeEntity>.AllOf(TimeComponentsLookup.TimelineData);
                matcher.componentNames = TimeComponentsLookup.componentNames;
                _matcherTimelineData = matcher;
            }

            return _matcherTimelineData;
        }
    }
}
