//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TimeContext {

    public TimeEntity rewindPositionEntity { get { return GetGroup(TimeMatcher.RewindPosition).GetSingleEntity(); } }
    public RewindPositionComponent rewindPosition { get { return rewindPositionEntity.rewindPosition; } }
    public bool hasRewindPosition { get { return rewindPositionEntity != null; } }

    public TimeEntity SetRewindPosition(Common.TransformInfo newValue) {
        if (hasRewindPosition) {
            throw new Entitas.EntitasException("Could not set RewindPosition!\n" + this + " already has an entity with RewindPositionComponent!",
                "You should check if the context already has a rewindPositionEntity before setting it or use context.ReplaceRewindPosition().");
        }
        var entity = CreateEntity();
        entity.AddRewindPosition(newValue);
        return entity;
    }

    public void ReplaceRewindPosition(Common.TransformInfo newValue) {
        var entity = rewindPositionEntity;
        if (entity == null) {
            entity = SetRewindPosition(newValue);
        } else {
            entity.ReplaceRewindPosition(newValue);
        }
    }

    public void RemoveRewindPosition() {
        rewindPositionEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TimeEntity {

    public RewindPositionComponent rewindPosition { get { return (RewindPositionComponent)GetComponent(TimeComponentsLookup.RewindPosition); } }
    public bool hasRewindPosition { get { return HasComponent(TimeComponentsLookup.RewindPosition); } }

    public void AddRewindPosition(Common.TransformInfo newValue) {
        var index = TimeComponentsLookup.RewindPosition;
        var component = (RewindPositionComponent)CreateComponent(index, typeof(RewindPositionComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceRewindPosition(Common.TransformInfo newValue) {
        var index = TimeComponentsLookup.RewindPosition;
        var component = (RewindPositionComponent)CreateComponent(index, typeof(RewindPositionComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveRewindPosition() {
        RemoveComponent(TimeComponentsLookup.RewindPosition);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class TimeMatcher {

    static Entitas.IMatcher<TimeEntity> _matcherRewindPosition;

    public static Entitas.IMatcher<TimeEntity> RewindPosition {
        get {
            if (_matcherRewindPosition == null) {
                var matcher = (Entitas.Matcher<TimeEntity>)Entitas.Matcher<TimeEntity>.AllOf(TimeComponentsLookup.RewindPosition);
                matcher.componentNames = TimeComponentsLookup.componentNames;
                _matcherRewindPosition = matcher;
            }

            return _matcherRewindPosition;
        }
    }
}
