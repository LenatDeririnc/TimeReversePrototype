//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TimeContext {

    public TimeEntity previousTimeEntity { get { return GetGroup(TimeMatcher.PreviousTime).GetSingleEntity(); } }
    public PreviousTimeComponent previousTime { get { return previousTimeEntity.previousTime; } }
    public bool hasPreviousTime { get { return previousTimeEntity != null; } }

    public TimeEntity SetPreviousTime(float newValue) {
        if (hasPreviousTime) {
            throw new Entitas.EntitasException("Could not set PreviousTime!\n" + this + " already has an entity with PreviousTimeComponent!",
                "You should check if the context already has a previousTimeEntity before setting it or use context.ReplacePreviousTime().");
        }
        var entity = CreateEntity();
        entity.AddPreviousTime(newValue);
        return entity;
    }

    public void ReplacePreviousTime(float newValue) {
        var entity = previousTimeEntity;
        if (entity == null) {
            entity = SetPreviousTime(newValue);
        } else {
            entity.ReplacePreviousTime(newValue);
        }
    }

    public void RemovePreviousTime() {
        previousTimeEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TimeEntity {

    public PreviousTimeComponent previousTime { get { return (PreviousTimeComponent)GetComponent(TimeComponentsLookup.PreviousTime); } }
    public bool hasPreviousTime { get { return HasComponent(TimeComponentsLookup.PreviousTime); } }

    public void AddPreviousTime(float newValue) {
        var index = TimeComponentsLookup.PreviousTime;
        var component = (PreviousTimeComponent)CreateComponent(index, typeof(PreviousTimeComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePreviousTime(float newValue) {
        var index = TimeComponentsLookup.PreviousTime;
        var component = (PreviousTimeComponent)CreateComponent(index, typeof(PreviousTimeComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePreviousTime() {
        RemoveComponent(TimeComponentsLookup.PreviousTime);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class TimeMatcher {

    static Entitas.IMatcher<TimeEntity> _matcherPreviousTime;

    public static Entitas.IMatcher<TimeEntity> PreviousTime {
        get {
            if (_matcherPreviousTime == null) {
                var matcher = (Entitas.Matcher<TimeEntity>)Entitas.Matcher<TimeEntity>.AllOf(TimeComponentsLookup.PreviousTime);
                matcher.componentNames = TimeComponentsLookup.componentNames;
                _matcherPreviousTime = matcher;
            }

            return _matcherPreviousTime;
        }
    }
}
