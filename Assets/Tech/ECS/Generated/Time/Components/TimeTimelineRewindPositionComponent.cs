//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TimeContext {

    public TimeEntity timelineRewindPositionEntity { get { return GetGroup(TimeMatcher.TimelineRewindPosition).GetSingleEntity(); } }
    public TimelineRewindPositionComponent timelineRewindPosition { get { return timelineRewindPositionEntity.timelineRewindPosition; } }
    public bool hasTimelineRewindPosition { get { return timelineRewindPositionEntity != null; } }

    public TimeEntity SetTimelineRewindPosition(Common.TimelineData newValue) {
        if (hasTimelineRewindPosition) {
            throw new Entitas.EntitasException("Could not set TimelineRewindPosition!\n" + this + " already has an entity with TimelineRewindPositionComponent!",
                "You should check if the context already has a timelineRewindPositionEntity before setting it or use context.ReplaceTimelineRewindPosition().");
        }
        var entity = CreateEntity();
        entity.AddTimelineRewindPosition(newValue);
        return entity;
    }

    public void ReplaceTimelineRewindPosition(Common.TimelineData newValue) {
        var entity = timelineRewindPositionEntity;
        if (entity == null) {
            entity = SetTimelineRewindPosition(newValue);
        } else {
            entity.ReplaceTimelineRewindPosition(newValue);
        }
    }

    public void RemoveTimelineRewindPosition() {
        timelineRewindPositionEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TimeEntity {

    public TimelineRewindPositionComponent timelineRewindPosition { get { return (TimelineRewindPositionComponent)GetComponent(TimeComponentsLookup.TimelineRewindPosition); } }
    public bool hasTimelineRewindPosition { get { return HasComponent(TimeComponentsLookup.TimelineRewindPosition); } }

    public void AddTimelineRewindPosition(Common.TimelineData newValue) {
        var index = TimeComponentsLookup.TimelineRewindPosition;
        var component = (TimelineRewindPositionComponent)CreateComponent(index, typeof(TimelineRewindPositionComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTimelineRewindPosition(Common.TimelineData newValue) {
        var index = TimeComponentsLookup.TimelineRewindPosition;
        var component = (TimelineRewindPositionComponent)CreateComponent(index, typeof(TimelineRewindPositionComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTimelineRewindPosition() {
        RemoveComponent(TimeComponentsLookup.TimelineRewindPosition);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class TimeMatcher {

    static Entitas.IMatcher<TimeEntity> _matcherTimelineRewindPosition;

    public static Entitas.IMatcher<TimeEntity> TimelineRewindPosition {
        get {
            if (_matcherTimelineRewindPosition == null) {
                var matcher = (Entitas.Matcher<TimeEntity>)Entitas.Matcher<TimeEntity>.AllOf(TimeComponentsLookup.TimelineRewindPosition);
                matcher.componentNames = TimeComponentsLookup.componentNames;
                _matcherTimelineRewindPosition = matcher;
            }

            return _matcherTimelineRewindPosition;
        }
    }
}
