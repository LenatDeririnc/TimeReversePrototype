//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TimeContext {

    public TimeEntity globalTimeSpeedEntity { get { return GetGroup(TimeMatcher.GlobalTimeSpeed).GetSingleEntity(); } }
    public GlobalTimeSpeedComponent globalTimeSpeed { get { return globalTimeSpeedEntity.globalTimeSpeed; } }
    public bool hasGlobalTimeSpeed { get { return globalTimeSpeedEntity != null; } }

    public TimeEntity SetGlobalTimeSpeed(float newValue) {
        if (hasGlobalTimeSpeed) {
            throw new Entitas.EntitasException("Could not set GlobalTimeSpeed!\n" + this + " already has an entity with GlobalTimeSpeedComponent!",
                "You should check if the context already has a globalTimeSpeedEntity before setting it or use context.ReplaceGlobalTimeSpeed().");
        }
        var entity = CreateEntity();
        entity.AddGlobalTimeSpeed(newValue);
        return entity;
    }

    public void ReplaceGlobalTimeSpeed(float newValue) {
        var entity = globalTimeSpeedEntity;
        if (entity == null) {
            entity = SetGlobalTimeSpeed(newValue);
        } else {
            entity.ReplaceGlobalTimeSpeed(newValue);
        }
    }

    public void RemoveGlobalTimeSpeed() {
        globalTimeSpeedEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TimeEntity {

    public GlobalTimeSpeedComponent globalTimeSpeed { get { return (GlobalTimeSpeedComponent)GetComponent(TimeComponentsLookup.GlobalTimeSpeed); } }
    public bool hasGlobalTimeSpeed { get { return HasComponent(TimeComponentsLookup.GlobalTimeSpeed); } }

    public void AddGlobalTimeSpeed(float newValue) {
        var index = TimeComponentsLookup.GlobalTimeSpeed;
        var component = (GlobalTimeSpeedComponent)CreateComponent(index, typeof(GlobalTimeSpeedComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceGlobalTimeSpeed(float newValue) {
        var index = TimeComponentsLookup.GlobalTimeSpeed;
        var component = (GlobalTimeSpeedComponent)CreateComponent(index, typeof(GlobalTimeSpeedComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveGlobalTimeSpeed() {
        RemoveComponent(TimeComponentsLookup.GlobalTimeSpeed);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class TimeMatcher {

    static Entitas.IMatcher<TimeEntity> _matcherGlobalTimeSpeed;

    public static Entitas.IMatcher<TimeEntity> GlobalTimeSpeed {
        get {
            if (_matcherGlobalTimeSpeed == null) {
                var matcher = (Entitas.Matcher<TimeEntity>)Entitas.Matcher<TimeEntity>.AllOf(TimeComponentsLookup.GlobalTimeSpeed);
                matcher.componentNames = TimeComponentsLookup.componentNames;
                _matcherGlobalTimeSpeed = matcher;
            }

            return _matcherGlobalTimeSpeed;
        }
    }
}
