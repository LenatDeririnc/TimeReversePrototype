//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TimeContext {

    public TimeEntity tickRateEntity { get { return GetGroup(TimeMatcher.TickRate).GetSingleEntity(); } }
    public TickRateComponent tickRate { get { return tickRateEntity.tickRate; } }
    public bool hasTickRate { get { return tickRateEntity != null; } }

    public TimeEntity SetTickRate(float newValue) {
        if (hasTickRate) {
            throw new Entitas.EntitasException("Could not set TickRate!\n" + this + " already has an entity with TickRateComponent!",
                "You should check if the context already has a tickRateEntity before setting it or use context.ReplaceTickRate().");
        }
        var entity = CreateEntity();
        entity.AddTickRate(newValue);
        return entity;
    }

    public void ReplaceTickRate(float newValue) {
        var entity = tickRateEntity;
        if (entity == null) {
            entity = SetTickRate(newValue);
        } else {
            entity.ReplaceTickRate(newValue);
        }
    }

    public void RemoveTickRate() {
        tickRateEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TimeEntity {

    public TickRateComponent tickRate { get { return (TickRateComponent)GetComponent(TimeComponentsLookup.TickRate); } }
    public bool hasTickRate { get { return HasComponent(TimeComponentsLookup.TickRate); } }

    public void AddTickRate(float newValue) {
        var index = TimeComponentsLookup.TickRate;
        var component = (TickRateComponent)CreateComponent(index, typeof(TickRateComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTickRate(float newValue) {
        var index = TimeComponentsLookup.TickRate;
        var component = (TickRateComponent)CreateComponent(index, typeof(TickRateComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTickRate() {
        RemoveComponent(TimeComponentsLookup.TickRate);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class TimeMatcher {

    static Entitas.IMatcher<TimeEntity> _matcherTickRate;

    public static Entitas.IMatcher<TimeEntity> TickRate {
        get {
            if (_matcherTickRate == null) {
                var matcher = (Entitas.Matcher<TimeEntity>)Entitas.Matcher<TimeEntity>.AllOf(TimeComponentsLookup.TickRate);
                matcher.componentNames = TimeComponentsLookup.componentNames;
                _matcherTickRate = matcher;
            }

            return _matcherTickRate;
        }
    }
}
