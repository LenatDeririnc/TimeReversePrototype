//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity playerCameraEntity { get { return GetGroup(GameMatcher.PlayerCamera).GetSingleEntity(); } }
    public PlayerCameraComponent playerCamera { get { return playerCameraEntity.playerCamera; } }
    public bool hasPlayerCamera { get { return playerCameraEntity != null; } }

    public GameEntity SetPlayerCamera(UnityEngine.Camera newValue) {
        if (hasPlayerCamera) {
            throw new Entitas.EntitasException("Could not set PlayerCamera!\n" + this + " already has an entity with PlayerCameraComponent!",
                "You should check if the context already has a playerCameraEntity before setting it or use context.ReplacePlayerCamera().");
        }
        var entity = CreateEntity();
        entity.AddPlayerCamera(newValue);
        return entity;
    }

    public void ReplacePlayerCamera(UnityEngine.Camera newValue) {
        var entity = playerCameraEntity;
        if (entity == null) {
            entity = SetPlayerCamera(newValue);
        } else {
            entity.ReplacePlayerCamera(newValue);
        }
    }

    public void RemovePlayerCamera() {
        playerCameraEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PlayerCameraComponent playerCamera { get { return (PlayerCameraComponent)GetComponent(GameComponentsLookup.PlayerCamera); } }
    public bool hasPlayerCamera { get { return HasComponent(GameComponentsLookup.PlayerCamera); } }

    public void AddPlayerCamera(UnityEngine.Camera newValue) {
        var index = GameComponentsLookup.PlayerCamera;
        var component = (PlayerCameraComponent)CreateComponent(index, typeof(PlayerCameraComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePlayerCamera(UnityEngine.Camera newValue) {
        var index = GameComponentsLookup.PlayerCamera;
        var component = (PlayerCameraComponent)CreateComponent(index, typeof(PlayerCameraComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePlayerCamera() {
        RemoveComponent(GameComponentsLookup.PlayerCamera);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPlayerCamera;

    public static Entitas.IMatcher<GameEntity> PlayerCamera {
        get {
            if (_matcherPlayerCamera == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PlayerCamera);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPlayerCamera = matcher;
            }

            return _matcherPlayerCamera;
        }
    }
}
