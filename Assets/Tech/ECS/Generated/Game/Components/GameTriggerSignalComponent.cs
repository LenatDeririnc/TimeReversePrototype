//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TriggerSignalComponent triggerSignal { get { return (TriggerSignalComponent)GetComponent(GameComponentsLookup.TriggerSignal); } }
    public bool hasTriggerSignal { get { return HasComponent(GameComponentsLookup.TriggerSignal); } }

    public void AddTriggerSignal(GameEntity newEntity, UnityEngine.Collider newCollider) {
        var index = GameComponentsLookup.TriggerSignal;
        var component = (TriggerSignalComponent)CreateComponent(index, typeof(TriggerSignalComponent));
        component.Entity = newEntity;
        component.Collider = newCollider;
        AddComponent(index, component);
    }

    public void ReplaceTriggerSignal(GameEntity newEntity, UnityEngine.Collider newCollider) {
        var index = GameComponentsLookup.TriggerSignal;
        var component = (TriggerSignalComponent)CreateComponent(index, typeof(TriggerSignalComponent));
        component.Entity = newEntity;
        component.Collider = newCollider;
        ReplaceComponent(index, component);
    }

    public void RemoveTriggerSignal() {
        RemoveComponent(GameComponentsLookup.TriggerSignal);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTriggerSignal;

    public static Entitas.IMatcher<GameEntity> TriggerSignal {
        get {
            if (_matcherTriggerSignal == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TriggerSignal);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTriggerSignal = matcher;
            }

            return _matcherTriggerSignal;
        }
    }
}
