//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity cameraPitchAngleEntity { get { return GetGroup(GameMatcher.CameraPitchAngle).GetSingleEntity(); } }
    public CameraPitchAngleComponent cameraPitchAngle { get { return cameraPitchAngleEntity.cameraPitchAngle; } }
    public bool hasCameraPitchAngle { get { return cameraPitchAngleEntity != null; } }

    public GameEntity SetCameraPitchAngle(float newValue) {
        if (hasCameraPitchAngle) {
            throw new Entitas.EntitasException("Could not set CameraPitchAngle!\n" + this + " already has an entity with CameraPitchAngleComponent!",
                "You should check if the context already has a cameraPitchAngleEntity before setting it or use context.ReplaceCameraPitchAngle().");
        }
        var entity = CreateEntity();
        entity.AddCameraPitchAngle(newValue);
        return entity;
    }

    public void ReplaceCameraPitchAngle(float newValue) {
        var entity = cameraPitchAngleEntity;
        if (entity == null) {
            entity = SetCameraPitchAngle(newValue);
        } else {
            entity.ReplaceCameraPitchAngle(newValue);
        }
    }

    public void RemoveCameraPitchAngle() {
        cameraPitchAngleEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CameraPitchAngleComponent cameraPitchAngle { get { return (CameraPitchAngleComponent)GetComponent(GameComponentsLookup.CameraPitchAngle); } }
    public bool hasCameraPitchAngle { get { return HasComponent(GameComponentsLookup.CameraPitchAngle); } }

    public void AddCameraPitchAngle(float newValue) {
        var index = GameComponentsLookup.CameraPitchAngle;
        var component = (CameraPitchAngleComponent)CreateComponent(index, typeof(CameraPitchAngleComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCameraPitchAngle(float newValue) {
        var index = GameComponentsLookup.CameraPitchAngle;
        var component = (CameraPitchAngleComponent)CreateComponent(index, typeof(CameraPitchAngleComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCameraPitchAngle() {
        RemoveComponent(GameComponentsLookup.CameraPitchAngle);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCameraPitchAngle;

    public static Entitas.IMatcher<GameEntity> CameraPitchAngle {
        get {
            if (_matcherCameraPitchAngle == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CameraPitchAngle);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCameraPitchAngle = matcher;
            }

            return _matcherCameraPitchAngle;
        }
    }
}
