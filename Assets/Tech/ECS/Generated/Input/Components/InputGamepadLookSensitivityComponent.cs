//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputContext {

    public InputEntity gamepadLookSensitivityEntity { get { return GetGroup(InputMatcher.GamepadLookSensitivity).GetSingleEntity(); } }
    public GamepadLookSensitivity gamepadLookSensitivity { get { return gamepadLookSensitivityEntity.gamepadLookSensitivity; } }
    public bool hasGamepadLookSensitivity { get { return gamepadLookSensitivityEntity != null; } }

    public InputEntity SetGamepadLookSensitivity(float newValue) {
        if (hasGamepadLookSensitivity) {
            throw new Entitas.EntitasException("Could not set GamepadLookSensitivity!\n" + this + " already has an entity with GamepadLookSensitivity!",
                "You should check if the context already has a gamepadLookSensitivityEntity before setting it or use context.ReplaceGamepadLookSensitivity().");
        }
        var entity = CreateEntity();
        entity.AddGamepadLookSensitivity(newValue);
        return entity;
    }

    public void ReplaceGamepadLookSensitivity(float newValue) {
        var entity = gamepadLookSensitivityEntity;
        if (entity == null) {
            entity = SetGamepadLookSensitivity(newValue);
        } else {
            entity.ReplaceGamepadLookSensitivity(newValue);
        }
    }

    public void RemoveGamepadLookSensitivity() {
        gamepadLookSensitivityEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public GamepadLookSensitivity gamepadLookSensitivity { get { return (GamepadLookSensitivity)GetComponent(InputComponentsLookup.GamepadLookSensitivity); } }
    public bool hasGamepadLookSensitivity { get { return HasComponent(InputComponentsLookup.GamepadLookSensitivity); } }

    public void AddGamepadLookSensitivity(float newValue) {
        var index = InputComponentsLookup.GamepadLookSensitivity;
        var component = (GamepadLookSensitivity)CreateComponent(index, typeof(GamepadLookSensitivity));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceGamepadLookSensitivity(float newValue) {
        var index = InputComponentsLookup.GamepadLookSensitivity;
        var component = (GamepadLookSensitivity)CreateComponent(index, typeof(GamepadLookSensitivity));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveGamepadLookSensitivity() {
        RemoveComponent(InputComponentsLookup.GamepadLookSensitivity);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherGamepadLookSensitivity;

    public static Entitas.IMatcher<InputEntity> GamepadLookSensitivity {
        get {
            if (_matcherGamepadLookSensitivity == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.GamepadLookSensitivity);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherGamepadLookSensitivity = matcher;
            }

            return _matcherGamepadLookSensitivity;
        }
    }
}
