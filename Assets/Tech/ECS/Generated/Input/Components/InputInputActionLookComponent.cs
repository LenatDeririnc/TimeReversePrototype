//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputContext {

    public InputEntity inputActionLookEntity { get { return GetGroup(InputMatcher.InputActionLook).GetSingleEntity(); } }
    public InputActionLookComponent inputActionLook { get { return inputActionLookEntity.inputActionLook; } }
    public bool hasInputActionLook { get { return inputActionLookEntity != null; } }

    public InputEntity SetInputActionLook(UnityEngine.InputSystem.InputAction newValue) {
        if (hasInputActionLook) {
            throw new Entitas.EntitasException("Could not set InputActionLook!\n" + this + " already has an entity with InputActionLookComponent!",
                "You should check if the context already has a inputActionLookEntity before setting it or use context.ReplaceInputActionLook().");
        }
        var entity = CreateEntity();
        entity.AddInputActionLook(newValue);
        return entity;
    }

    public void ReplaceInputActionLook(UnityEngine.InputSystem.InputAction newValue) {
        var entity = inputActionLookEntity;
        if (entity == null) {
            entity = SetInputActionLook(newValue);
        } else {
            entity.ReplaceInputActionLook(newValue);
        }
    }

    public void RemoveInputActionLook() {
        inputActionLookEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public InputActionLookComponent inputActionLook { get { return (InputActionLookComponent)GetComponent(InputComponentsLookup.InputActionLook); } }
    public bool hasInputActionLook { get { return HasComponent(InputComponentsLookup.InputActionLook); } }

    public void AddInputActionLook(UnityEngine.InputSystem.InputAction newValue) {
        var index = InputComponentsLookup.InputActionLook;
        var component = (InputActionLookComponent)CreateComponent(index, typeof(InputActionLookComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceInputActionLook(UnityEngine.InputSystem.InputAction newValue) {
        var index = InputComponentsLookup.InputActionLook;
        var component = (InputActionLookComponent)CreateComponent(index, typeof(InputActionLookComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveInputActionLook() {
        RemoveComponent(InputComponentsLookup.InputActionLook);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherInputActionLook;

    public static Entitas.IMatcher<InputEntity> InputActionLook {
        get {
            if (_matcherInputActionLook == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.InputActionLook);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherInputActionLook = matcher;
            }

            return _matcherInputActionLook;
        }
    }
}
