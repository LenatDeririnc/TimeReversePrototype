//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public VelocityConverterComponent velocityConverter { get { return (VelocityConverterComponent)GetComponent(InputComponentsLookup.VelocityConverter); } }
    public bool hasVelocityConverter { get { return HasComponent(InputComponentsLookup.VelocityConverter); } }

    public void AddVelocityConverter(Common.VelocityConverter newValue) {
        var index = InputComponentsLookup.VelocityConverter;
        var component = (VelocityConverterComponent)CreateComponent(index, typeof(VelocityConverterComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceVelocityConverter(Common.VelocityConverter newValue) {
        var index = InputComponentsLookup.VelocityConverter;
        var component = (VelocityConverterComponent)CreateComponent(index, typeof(VelocityConverterComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveVelocityConverter() {
        RemoveComponent(InputComponentsLookup.VelocityConverter);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherVelocityConverter;

    public static Entitas.IMatcher<InputEntity> VelocityConverter {
        get {
            if (_matcherVelocityConverter == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.VelocityConverter);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherVelocityConverter = matcher;
            }

            return _matcherVelocityConverter;
        }
    }
}
